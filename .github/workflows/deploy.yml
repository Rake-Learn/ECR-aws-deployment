name: Terraform CI/CD with Build and Deploy to AWS ECS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-docker-image:
    name: 'Login to AWS, Build Docker Image, and Push to ECR'
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up AWS CLI to log in using AWS credentials
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}  # You can either hardcode or set this in secrets

      # Fetch AWS Account ID dynamically using AWS CLI
      - name: Get AWS Account ID
        id: account_id
        run: |
          echo "AWS Account ID: $(aws sts get-caller-identity --query Account --output text)"
          echo "AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_ENV

      # Create the ECR repository if it doesn't exist
      - name: Create ECR Repository
        run: |
          aws ecr describe-repositories --repository-names my-ecr-repo || \
          aws ecr create-repository --repository-name my-ecr-repo

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login to Amazon ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Build and push Docker image
      - name: Build and push Docker image
        run: |
          # Retrieve AWS region from the environment variable
          REGION=${{ secrets.AWS_REGION }}
          ACCOUNT_ID=${{ env.AWS_ACCOUNT_ID }}
          IMAGE_TAG="${ACCOUNT_ID}.dkr.ecr.${REGION}.amazonaws.com/my-ecr-repo:latest"
          echo "Building Docker image and pushing to $IMAGE_TAG"
          
          # Build Docker image from the 'myapp' subdirectory
          docker build -t $IMAGE_TAG ./myapp
          docker push $IMAGE_TAG
